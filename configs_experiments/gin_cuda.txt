# our idea NODES
accelerator d ['cuda']
model.type type ['dilated_gnn']
dataset.name dataset ['PROTEINS','DD','NCI1']
gnn.layer_type layer ['ginconv_paper']
gnn.use_edge_features edges [False]
gnn.layers_k1 k1 [1,2,3]
gnn.layers_k2 k2 [1,2,3]
gnn.dim_inner h [32,64]
train.batch_size batch_size [32,128]
optim.base_lr lr [1e-2]
gnn.batchnorm batchnorm [True]
gnn.act act ['relu']
gnn.dropout dropout [0.0,0.5]
model.graph_pooling gpool ['concat_across_sum_of_layers']
optim.scheduler scheduler ['step_lr_epochs']
optim.step_size step_size [50]
optim.step_gamma step_gamma [0.5]

# used for comparison
accelerator d ['cuda']
model.type type ['standard_gnn']
dataset.name dataset ['PROTEINS','DD','NCI1']
gnn.layer_type layer ['ginconv_paper']
gnn.dim_inner h [32]
gnn.layers_mp layers_mp [3,5]
train.batch_size batch_size [32,128]
optim.base_lr lr [1e-2]
gnn.batchnorm batchnorm [True]
gnn.act act ['relu']
gnn.dropout dropout [0.0,0.5]
model.graph_pooling gpool ['concat_across_sum_of_layers']
optim.scheduler scheduler ['step_lr_epochs']
optim.step_size step_size [50]
optim.step_gamma step_gamma [0.5]

# used for comparison
accelerator d ['cuda']
model.type type ['standard_gnn']
dataset.name dataset ['PROTEINS','DD','NCI1']
gnn.layer_type layer ['ginconv_paper']
gnn.dim_inner h [64]
gnn.layers_mp layers_mp [2,5]
train.batch_size batch_size [32,128]
optim.base_lr lr [1e-2]
gnn.batchnorm batchnorm [True]
gnn.act act ['relu']
gnn.dropout dropout [0.0,0.5]
model.graph_pooling gpool ['concat_across_sum_of_layers']
optim.scheduler scheduler ['step_lr_epochs']
optim.step_size step_size [50]
optim.step_gamma step_gamma [0.5]