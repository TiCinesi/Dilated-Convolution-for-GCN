GraphGymModule(
  (model): DilatedPositionalGNNModel(
    (encoder): FeatureEncoder(
      (node_encoder): BottleneckEncoder(
        (embedding_list): ModuleList(
          (0): Embedding(129, 256)
          (1): Embedding(129, 256)
        )
      )
    )
    (mp): GNNDilatedPositionalStage(
      (classic_layers): ModuleList(
        (0): GeneralLayer(
          (layer): LayerGINConv(
            (model): GINConv(nn=Sequential(
              (0): Linear(256, 256, bias=True)
              (1): ReLU()
              (2): Linear(256, 256, bias=True)
            ))
          )
          (post_layer): Sequential(
            (0): ReLU()
          )
        )
      )
      (dilated_layers): ModuleList(
        (0): DilatedPositionalGeneralLayer(
          (layer): LayerGINConv(
            (model): GINConv(nn=Sequential(
              (0): Linear(256, 256, bias=True)
              (1): ReLU()
              (2): Linear(256, 256, bias=True)
            ))
          )
          (post_layer): Sequential(
            (0): ReLU()
          )
          (gem): GeM(p=3.0000, eps=1e-06)
          (pos): PositionalEncoding()
        )
        (1): DilatedPositionalGeneralLayer(
          (layer): LayerGINConv(
            (model): GINConv(nn=Sequential(
              (0): Linear(256, 256, bias=True)
              (1): ReLU()
              (2): Linear(256, 256, bias=True)
            ))
          )
          (post_layer): Sequential(
            (0): ReLU()
          )
          (gem): GeM(p=3.0000, eps=1e-06)
          (pos): PositionalEncoding()
        )
        (2): DilatedPositionalGeneralLayer(
          (layer): LayerGINConv(
            (model): GINConv(nn=Sequential(
              (0): Linear(256, 256, bias=True)
              (1): ReLU()
              (2): Linear(256, 256, bias=True)
            ))
          )
          (post_layer): Sequential(
            (0): ReLU()
          )
          (gem): GeM(p=3.0000, eps=1e-06)
          (pos): PositionalEncoding()
        )
      )
      (act): ReLU()
    )
    (post_mp): BottleneckHead(
      (layer_post_mp): Linear(in_features=256, out_features=129, bias=False)
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 0
  edge_encoder: False
  edge_encoder_bn: False
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: BOTTLENECK
  label_column: none
  label_table: none
  location: local
  name: depth_7
  node_encoder: True
  node_encoder_bn: False
  node_encoder_name: bottleneck_encoder
  positional_encoding_path: False
  preprocesss_dataset: True
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
  use_sparse_adj: False
devices: None
gnn:
  act: relu
  act_on_last_layer_mp: True
  agg: none
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 4
  att_heads_final: 6
  batchnorm: False
  clear_feature: True
  dilated_path_join: add
  dim_inner: 256
  dropout: 0.0
  edge_agg: add
  head: bottleneck_head
  keep_edge: 0.5
  l2norm: False
  layer_norm: True
  layer_type: ginconv_paper
  layer_type_dilated: ginconv_paper
  layers_k1: 1
  layers_k2: 3
  layers_mp: 3
  layers_post_mp: 1
  layers_pre_mp: 0
  learn_alpha_residual_connection: True
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: skipsum
  use_edge_features: False
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: accuracy
model:
  edge_decoding: dot
  graph_pooling: mean
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: dilapos_gnn
num_threads: 6
num_workers: 16
optim:
  base_lr: 0.001
  lr_decay: 0.1
  max_epoch: 100
  momentum: 0.9
  optimizer: adam
  scheduler: reduce_lr_on_plateau
  step_gamma: 0.5
  step_size: 10
  steps: [30, 60, 90]
  weight_decay: 0.0
out_dir: results_experiments/bottleneck_base_grid_depths_2/bottleneck_base-name=depth_7-batch_size=1024-accumulate_grad=2-layers_k2=3-dim_inner=256
print: both
round: 4
run_dir: results_experiments/bottleneck_base_grid_depths_2/bottleneck_base-name=depth_7-batch_size=1024-accumulate_grad=2-layers_k2=3-dim_inner=256/0
seed: 1
share:
  dim0: 128
  dim_in: 2
  dim_out: 128
  num_splits: 2
tensorboard_agg: True
tensorboard_each_run: False
train:
  accumulate_grad: 2
  auto_resume: False
  batch_size: 1024
  ckpt_clean: True
  ckpt_period: 100
  early_stopping: False
  early_stopping_patience: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  monitor_val: False
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 625414
val: {'epoch': 0, 'loss': 5.1855, 'lr': 0.001, 'params': 625414, 'time_iter': 11.8911, 'accuracy': 0.0059}
train: {'epoch': 0, 'eta': 160756105.1561, 'loss': 2.3467, 'lr': 0.001, 'params': 625414, 'time_iter': 649.5196, 'accuracy': 0.0211}
val: {'epoch': 1, 'loss': 5.3163, 'lr': 0.001, 'params': 625414, 'time_iter': 11.8803, 'accuracy': 0.0069}
train: {'epoch': 1, 'eta': 158448962.9468, 'loss': 2.2809, 'lr': 0.001, 'params': 625414, 'time_iter': 643.9413, 'accuracy': 0.0247}
val: {'epoch': 2, 'loss': 5.3828, 'lr': 0.001, 'params': 625414, 'time_iter': 12.2885, 'accuracy': 0.0084}
train: {'epoch': 2, 'eta': 156651845.7116, 'loss': 2.2695, 'lr': 0.001, 'params': 625414, 'time_iter': 644.5001, 'accuracy': 0.0252}
val: {'epoch': 3, 'loss': 5.4703, 'lr': 0.001, 'params': 625414, 'time_iter': 12.0383, 'accuracy': 0.0062}
train: {'epoch': 3, 'eta': 154803833.0132, 'loss': 2.2647, 'lr': 0.001, 'params': 625414, 'time_iter': 642.1029, 'accuracy': 0.0253}
val: {'epoch': 4, 'loss': 5.6821, 'lr': 0.001, 'params': 625414, 'time_iter': 11.534, 'accuracy': 0.007}
train: {'epoch': 4, 'eta': 153047005.6655, 'loss': 2.2529, 'lr': 0.001, 'params': 625414, 'time_iter': 641.9783, 'accuracy': 0.0274}
val: {'epoch': 5, 'loss': 19.1292, 'lr': 0.001, 'params': 625414, 'time_iter': 11.7293, 'accuracy': 0.0056}
train: {'epoch': 5, 'eta': 151445544.4062, 'loss': 1.5564, 'lr': 0.001, 'params': 625414, 'time_iter': 644.6525, 'accuracy': 0.2944}
val: {'epoch': 6, 'loss': 43.2628, 'lr': 0.001, 'params': 625414, 'time_iter': 13.1368, 'accuracy': 0.0052}
train: {'epoch': 6, 'eta': 149840942.7562, 'loss': 0.4504, 'lr': 0.001, 'params': 625414, 'time_iter': 644.6455, 'accuracy': 0.7809}
val: {'epoch': 7, 'loss': 61.7341, 'lr': 0.001, 'params': 625414, 'time_iter': 12.3068, 'accuracy': 0.0066}
train: {'epoch': 7, 'eta': 148292380.3133, 'loss': 0.2093, 'lr': 0.001, 'params': 625414, 'time_iter': 646.6556, 'accuracy': 0.8949}
val: {'epoch': 8, 'loss': 67.0134, 'lr': 0.001, 'params': 625414, 'time_iter': 11.9807, 'accuracy': 0.0048}
train: {'epoch': 8, 'eta': 146666034.2593, 'loss': 0.1439, 'lr': 0.001, 'params': 625414, 'time_iter': 644.1769, 'accuracy': 0.9289}
val: {'epoch': 9, 'loss': 75.0698, 'lr': 0.001, 'params': 625414, 'time_iter': 10.8339, 'accuracy': 0.0045}
train: {'epoch': 9, 'eta': 145140879.997, 'loss': 0.1139, 'lr': 0.001, 'params': 625414, 'time_iter': 648.533, 'accuracy': 0.9425}
val: {'epoch': 10, 'loss': 85.3216, 'lr': 0.001, 'params': 625414, 'time_iter': 15.3094, 'accuracy': 0.0056}
train: {'epoch': 10, 'eta': 143545602.7965, 'loss': 0.0908, 'lr': 0.001, 'params': 625414, 'time_iter': 645.9308, 'accuracy': 0.9543}
val: {'epoch': 11, 'loss': 89.0474, 'lr': 0.001, 'params': 625414, 'time_iter': 14.8749, 'accuracy': 0.007}
train: {'epoch': 11, 'eta': 142008997.2101, 'loss': 0.0794, 'lr': 0.001, 'params': 625414, 'time_iter': 649.3088, 'accuracy': 0.9637}
val: {'epoch': 12, 'loss': 98.1329, 'lr': 0.001, 'params': 625414, 'time_iter': 15.0842, 'accuracy': 0.0059}
train: {'epoch': 12, 'eta': 140449379.0367, 'loss': 0.0667, 'lr': 0.001, 'params': 625414, 'time_iter': 648.7302, 'accuracy': 0.9691}
val: {'epoch': 13, 'loss': 102.0411, 'lr': 0.001, 'params': 625414, 'time_iter': 11.6361, 'accuracy': 0.0059}
train: {'epoch': 13, 'eta': 138859582.5758, 'loss': 0.0707, 'lr': 0.001, 'params': 625414, 'time_iter': 647.3438, 'accuracy': 0.9669}
val: {'epoch': 14, 'loss': 102.2777, 'lr': 0.001, 'params': 625414, 'time_iter': 11.3707, 'accuracy': 0.0061}
train: {'epoch': 14, 'eta': 137184632.6887, 'loss': 0.0638, 'lr': 0.001, 'params': 625414, 'time_iter': 641.6018, 'accuracy': 0.9746}
val: {'epoch': 15, 'loss': 105.0497, 'lr': 0.001, 'params': 625414, 'time_iter': 12.35, 'accuracy': 0.0073}
train: {'epoch': 15, 'eta': 135501587.9103, 'loss': 0.0631, 'lr': 0.001, 'params': 625414, 'time_iter': 640.3094, 'accuracy': 0.9715}
val: {'epoch': 16, 'loss': 109.0617, 'lr': 0.001, 'params': 625414, 'time_iter': 11.7422, 'accuracy': 0.0064}
train: {'epoch': 16, 'eta': 133879446.5053, 'loss': 0.0558, 'lr': 0.001, 'params': 625414, 'time_iter': 644.5061, 'accuracy': 0.9767}
val: {'epoch': 17, 'loss': 112.1078, 'lr': 0.001, 'params': 625414, 'time_iter': 11.9112, 'accuracy': 0.0045}
train: {'epoch': 17, 'eta': 132263504.6619, 'loss': 0.0597, 'lr': 0.001, 'params': 625414, 'time_iter': 644.9443, 'accuracy': 0.974}
val: {'epoch': 18, 'loss': 114.2091, 'lr': 0.001, 'params': 625414, 'time_iter': 12.2171, 'accuracy': 0.005}
train: {'epoch': 18, 'eta': 130671419.9469, 'loss': 0.0584, 'lr': 0.001, 'params': 625414, 'time_iter': 647.1474, 'accuracy': 0.975}
val: {'epoch': 19, 'loss': 110.7015, 'lr': 0.001, 'params': 625414, 'time_iter': 12.1342, 'accuracy': 0.0062}
train: {'epoch': 19, 'eta': 129061914.1842, 'loss': 0.0536, 'lr': 0.001, 'params': 625414, 'time_iter': 645.6631, 'accuracy': 0.9818}
val: {'epoch': 20, 'loss': 119.4038, 'lr': 0.001, 'params': 625414, 'time_iter': 12.5237, 'accuracy': 0.0064}
train: {'epoch': 20, 'eta': 127428196.4661, 'loss': 0.0009, 'lr': 0.001, 'params': 625414, 'time_iter': 643.1358, 'accuracy': 1.0}
val: {'epoch': 21, 'loss': 125.8251, 'lr': 0.001, 'params': 625414, 'time_iter': 13.62, 'accuracy': 0.0066}
train: {'epoch': 21, 'eta': 125826830.7191, 'loss': 0.0003, 'lr': 0.001, 'params': 625414, 'time_iter': 646.5203, 'accuracy': 1.0}
val: {'epoch': 22, 'loss': 131.4743, 'lr': 0.001, 'params': 625414, 'time_iter': 11.3367, 'accuracy': 0.0066}
train: {'epoch': 22, 'eta': 124211571.0177, 'loss': 0.0001, 'lr': 0.001, 'params': 625414, 'time_iter': 645.0155, 'accuracy': 1.0}
val: {'epoch': 23, 'loss': 136.702, 'lr': 0.001, 'params': 625414, 'time_iter': 11.7496, 'accuracy': 0.0064}
train: {'epoch': 23, 'eta': 122593825.343, 'loss': 0.0001, 'lr': 0.001, 'params': 625414, 'time_iter': 644.6728, 'accuracy': 1.0}
val: {'epoch': 24, 'loss': 141.8252, 'lr': 0.001, 'params': 625414, 'time_iter': 11.3601, 'accuracy': 0.0066}
train: {'epoch': 24, 'eta': 120962266.5726, 'loss': 0.0, 'lr': 0.001, 'params': 625414, 'time_iter': 642.7664, 'accuracy': 1.0}
val: {'epoch': 25, 'loss': 146.7403, 'lr': 0.001, 'params': 625414, 'time_iter': 11.5243, 'accuracy': 0.0066}
train: {'epoch': 25, 'eta': 119319101.4287, 'loss': 0.0, 'lr': 0.001, 'params': 625414, 'time_iter': 640.8688, 'accuracy': 1.0}
val: {'epoch': 26, 'loss': 151.5782, 'lr': 0.001, 'params': 625414, 'time_iter': 12.2068, 'accuracy': 0.0066}
train: {'epoch': 26, 'eta': 117676046.5363, 'loss': 0.0, 'lr': 0.001, 'params': 625414, 'time_iter': 640.4359, 'accuracy': 1.0}
val: {'epoch': 27, 'loss': 156.3636, 'lr': 0.001, 'params': 625414, 'time_iter': 12.8145, 'accuracy': 0.0062}
train: {'epoch': 27, 'eta': 116035696.5891, 'loss': 0.0, 'lr': 0.001, 'params': 625414, 'time_iter': 640.3904, 'accuracy': 1.0}
